{"version":3,"sources":["ColorPickerView.tsx","graphSlice.ts","navigationSlice.ts","NodeView.tsx","NodesView.tsx","EdgeView.tsx","EdgesView.tsx","NoteTakerView.tsx","Editor.tsx","Outline.tsx","driveSlice.ts","LoadFromDrive.tsx","AppDrawer.tsx","App.tsx","store.ts","index.tsx"],"names":["ColorOption","colorDispatchable","color","props","dispatch","useDispatch","Button","style","width","minWidth","height","borderWidth","borderColor","colorable","borderStyle","margin","background","onClick","dispatchable","ColorPickerView","colors","display","marginLeft","map","c","newId","nodes","Math","max","n","id","concat","graphSlice","createSlice","name","initialState","driveId","label","shape","edges","from","to","text","reducers","addNode","reducer","state","action","push","payload","prepare","data","nanoid","addEdge","setNodeLabel","node","find","setNodeColor","setNodeShape","deleteNode","filter","e","setEdgeColor","edge","deleteEdge","setGraph","updateText","setName","setDriveId","actions","navigationSlice","tab","drawerIsOpen","setTab","setDrawerIsOpen","ShapeOption","star","box","ellipsis","triangle","shapes","ShapePicker","NodeView","index","visible","editingRef","useRef","useState","editing","doSetEditing","setLabel","setEditing","save","current","focus","listRef","isActive","document","activeElement","contains","useHotkeys","key","keyup","enableOnTags","toString","getElementsByTagName","listStyleType","ref","TextField","fullWidth","value","onChange","target","onBlur","inputProps","flexDirection","padding","React","memo","NodesView","graph","useSelector","searchCriteria","setSearchCriteria","newNodeLabel","setNewNodeLabel","addRef","searchRef","el","v","blur","ctrlKey","Typography","variant","component","gutterBottom","InputProps","endAdornment","InputAdornment","position","IconButton","evt","onKeyPress","indexOf","EdgeView","EdgesView","nodesById","Object","fromEntries","newEdgeFrom","setNewEdgeFrom","newEdgeTo","setNewEdgeTo","useEffect","Autocomplete","options","slice","reverse","getOptionLabel","option","_","blurOnSelect","renderInput","params","NoteTakerView","markdown","multiline","minHeight","inputRef","Editor","overflow","hidden","Outline","version","setVersion","currentGraph","setCurrentGraph","previousGraph","setPreviousGraph","network","setNetwork","j","JSON","stringify","parse","parseInt","nodeIds","removedNodes","body","remove","update","edgeIds","removedEdges","stabilize","visJsRef","Network","physics","enabled","layout","hierarchical","nodeSpacing","direction","sortMethod","arrows","children","driveSlice","isSignedIn","recentlySaved","setSignedIn","setSaved","login","a","Promise","resolve","reject","gapi","load","client","init","status","auth2","getAuthInstance","get","listen","signIn","console","error","saveToDrive","getState","prompt","alert","details","drive","files","create","parents","uploadType","mimeType","fields","response","result","g","fetch","method","headers","Headers","getToken","access_token","LoadFromDrive","close","loading","setLoading","setFiles","handleListItemClick","fileId","alt","f","list","spaces","pageSize","orderBy","Dialog","onClose","aria-labelledby","open","DialogTitle","textAlign","CircularProgress","List","file","ListItem","button","ListItemText","primary","AppDrawer","navigation","loadFromDriveOpen","setLoadFromDriveOpen","Drawer","Divider","paddingRight","ListItemIcon","element","createElement","setAttribute","appendChild","click","removeChild","onchange","fileToLoad","getAttribute","attrs","eq","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","st","dotparse","s","type","i","node_id","attr_list","nodesByLabel","edge_list","readAsText","join","filename","encodeURIComponent","App","saved","event","preventDefault","AppBar","Toolbar","aria-label","Tabs","newTab","Tab","className","flex","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Fragment","size","fontSize","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","combineReducers","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8923c219.chunk.js","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button';\n\nimport type { Color } from './graphSlice'\n\nexport interface Colorable {\n  color: Color\n}\nexport interface ColorDispatchable {\n  colorable: Colorable\n  dispatchable: (color: Color) => void\n}\n\nfunction ColorOption({colorDispatchable, color, ...props}: {color: Color, colorDispatchable: ColorDispatchable}) {\n  const dispatch = useDispatch()\n  return <Button style={{\n    width: 30,\n    minWidth: 30,\n    height: 30,\n    borderWidth: 4,\n    borderColor: colorDispatchable.colorable.color === color ? 'red' : 'black',\n    borderStyle: 'solid',\n    margin: 8,\n    background: color,\n    ...props\n  }} onClick={() => {\n    dispatch(colorDispatchable.dispatchable(color))\n  }}></Button>\n}\n\nfunction ColorPickerView({\n    colorDispatchable,\n    colors,\n}: {\n    colorDispatchable: ColorDispatchable,\n    colors: Color[]\n}) {\n  return (\n    <div style={{display: 'flex', marginLeft: -8}}>\n      {colors.map((c) => (\n        <ColorOption key={c} colorDispatchable={colorDispatchable} color={c} />\n      ))}\n    </div>\n  )\n}\n\nexport default ColorPickerView\n","import { createSlice } from '@reduxjs/toolkit'\nimport { nanoid } from 'nanoid'\n\nexport type Color = 'white' | 'red' | 'blue' | 'yellow' | 'black'\nexport type Shape = 'star' | 'box' | 'ellipsis' | 'triangle'\n\ninterface WithId {\n  id: number\n}\n\nexport interface Node extends WithId {\n  label: string\n  color: Color\n  shape: Shape\n}\n\nexport interface Edge extends WithId {\n  from: number\n  to: number\n  color: Color\n}\n\ninterface GraphState {\n  driveId: string | null\n  name: string\n  nodes: Node[]\n  edges: Edge[]\n  text: string\n}\n\nconst newId = (nodes: WithId[]) => {\n  return Math.max(...nodes.map((n) => n.id).concat([0]) || 0) + 1\n}\n\nconst initialState: GraphState = {\n  driveId: null,\n  name: '',\n  nodes: [\n    { id: 1, label: 'Node 1', color: 'red', shape: 'box' },\n    { id: 2, label: 'Node 2', color: 'white', shape: 'box' },\n    { id: 3, label: 'Node 3', color: 'white', shape: 'box' },\n    { id: 4, label: 'Node 4', color: 'white', shape: 'box' },\n    { id: 5, label: 'Node 5', color: 'white', shape: 'box' },\n  ],\n  edges: [\n    { id: 1, from: 1, to: 2, color: 'black' },\n    { id: 2, from: 1, to: 3, color: 'black' },\n    { id: 3, from: 2, to: 4, color: 'black' },\n    { id: 4, from: 2, to: 5, color: 'black' }\n  ],\n  text: '# Hello world\\n',\n}\n\nconst graphSlice = createSlice({\n  name: 'graph',\n  initialState,\n  reducers: {\n    addNode: {\n      reducer(state, action) {\n        state.nodes.push({\n          id: newId(state.nodes),\n          label: action.payload.label,\n          shape: 'box',\n          color: 'white',\n        })\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    addEdge: {\n      reducer(state, action) {\n        state.edges.push({\n          id: newId(state.edges),\n          from: action.payload.from.id,\n          to: action.payload.to.id,\n          color: 'black',\n        })\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setNodeLabel: {\n      reducer(state, action) {\n        const node = state.nodes.find((n) => n.id === action.payload.node.id)\n        if (!node) {\n          return\n        }\n        node.label = action.payload.label\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setNodeColor: {\n      reducer(state, action) {\n        const node = state.nodes.find((n) => n.id === action.payload.node.id)\n        if (!node) {\n          return\n        }\n        node.color = action.payload.color\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setNodeShape: {\n      reducer(state, action) {\n        const node = state.nodes.find((n) => n.id === action.payload.node.id)\n        if (!node) {\n          return\n        }\n        node.shape = action.payload.shape\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    deleteNode: {\n      reducer(state, action) {\n        state.nodes = state.nodes.filter((n) => n.id !== action.payload.id)\n        state.edges = state.edges.filter((e) => e.from !== action.payload.id && e.to !== action.payload.id)\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setEdgeColor: {\n      reducer(state, action) {\n        const edge = state.edges.find((n) => n.id === action.payload.edge.id)\n        if (!edge) {\n          return\n        }\n        edge.color = action.payload.color\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    deleteEdge: {\n      reducer(state, action) {\n        state.edges = state.edges.filter((e) => e.id !== action.payload.id)\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setGraph: {\n      reducer(state, action) {\n        state.nodes = action.payload.nodes\n        state.edges = action.payload.edges\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    updateText: {\n      reducer(state, action) {\n        state.text = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setName: {\n      reducer(state, action) {\n        state.name = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setDriveId: {\n      reducer(state, action) {\n        state.driveId = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n  },\n})\n\nexport const {\n  addNode,\n  addEdge,\n  setNodeColor,\n  setNodeShape,\n  deleteNode,\n  setEdgeColor,\n  deleteEdge,\n  setGraph,\n  updateText,\n  setName,\n  setDriveId,\n  setNodeLabel,\n} = graphSlice.actions\n\nexport default graphSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { nanoid } from 'nanoid'\n\nexport type Tab = 0 | 1 | 2\n\ninterface NavigationState {\n  tab: Tab\n  drawerIsOpen: boolean\n}\n\nconst initialState: NavigationState = {\n  tab: 0,\n  drawerIsOpen: false,\n}\n\nconst navigationSlice = createSlice({\n  name: 'navigation',\n  initialState,\n  reducers: {\n    setTab: {\n      reducer(state, action) {\n        state.tab = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setDrawerIsOpen: {\n      reducer(state, action) {\n        state.drawerIsOpen = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n  },\n})\n\nexport const {\n  setTab,\n  setDrawerIsOpen,\n} = navigationSlice.actions\n\nexport default navigationSlice.reducer\n","import React, { useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport BoxIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CircleIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport TriangleIcon from '@material-ui/icons/ChangeHistory';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport ColorPickerView from './ColorPickerView'\nimport { setNodeLabel, Color, setNodeColor, setNodeShape, deleteNode } from './graphSlice'\nimport { setTab } from './navigationSlice'\nimport type { Node, Shape } from './graphSlice'\n\nfunction ShapeOption({node, shape, ...props}: {node: Node, shape: Shape}) {\n  const dispatch = useDispatch()\n  return <Button style={{\n    width: 30,\n    minWidth: 30,\n    height: 30,\n    margin: 8,\n    color: shape === node.shape ? 'blue' : 'black',\n    ...props\n  }} onClick={() => {\n    dispatch(setNodeShape({ node, shape }))\n  }}>{{\n    star: <StarIcon />,\n    box: <BoxIcon />,\n    ellipsis: <CircleIcon />,\n    triangle: <TriangleIcon />,\n  }[shape]}</Button>\n}\n\nconst shapes: Shape[] = ['star', 'box', 'ellipsis', 'triangle']\nfunction ShapePicker({node}: {node: Node}) {\n  return (\n    <div style={{display: 'flex', marginLeft: -8}}>\n      {shapes.map((c) => (\n        <ShapeOption key={c} node={node} shape={c} />\n      ))}\n    </div>\n  )\n}\n\nfunction NodeView({node, index, visible}: {node: Node, index: number, visible: boolean}) {\n  const dispatch = useDispatch()\n  const editingRef = useRef<HTMLInputElement | null>(null)\n  const [editing, doSetEditing] = useState(false)\n  const [label, setLabel] = useState('')\n  const setEditing = (editing: boolean, save: boolean = false) => {\n    doSetEditing(editing)\n    if (editing) {\n      editingRef?.current?.focus()\n    } else if (save) {\n      dispatch(setNodeLabel({node, label}))\n    }\n  }\n  useState(() => setLabel(node.label))\n  const del = () => dispatch(deleteNode(node))\n  const connect = () => dispatch(setTab(1))\n  const listRef = useRef<HTMLLIElement>(null)\n  const isActive = () => {\n    if (document.activeElement && listRef?.current) {\n      return listRef.current.contains(document.activeElement)\n    }\n    return false\n  }\n  useHotkeys('w', () => { isActive() && dispatch(setNodeColor({node, color: 'white'}))})\n  useHotkeys('y', () => { isActive() && dispatch(setNodeColor({node, color: 'yellow'}))})\n  useHotkeys('b', () => { isActive() && dispatch(setNodeColor({node, color: 'blue'}))})\n  useHotkeys('r', () => { isActive() && dispatch(setNodeColor({node, color: 'red'}))})\n  useHotkeys('*', (e: any) => { e.key === '*' && isActive() && dispatch(setNodeShape({node, shape: 'star'}))})\n  useHotkeys('q', () => { isActive() && dispatch(setNodeShape({node, shape: 'box'}))})\n  useHotkeys('c', () => { isActive() && dispatch(setNodeShape({node, shape: 'ellipsis'}))})\n  useHotkeys('t', () => { isActive() && dispatch(setNodeShape({node, shape: 'triangle'}))})\n  useHotkeys('e', () => { isActive() && setEditing(true) }, { keyup: true })\n  useHotkeys('enter', () => { editing && setEditing(false, true) }, { keyup: true, enableOnTags: ['INPUT'] })\n  useHotkeys('esc', () => { editing && setEditing(false, false) }, { keyup: true, enableOnTags: ['INPUT'] })\n  useHotkeys((1+index).toString(), () => {\n    listRef?.current?.getElementsByTagName('button')[0].focus()\n  })\n  return (\n    <li style={{listStyleType: 'none', margin: 0, display: visible ? 'block' : 'none'}} ref={listRef}>\n      <TextField\n        fullWidth\n        value={label}\n        onChange={(e) => setLabel(e.target.value)}\n        onBlur={(e) => setEditing(false)}\n        style={{display: editing ? 'block' : 'none'}}\n        inputProps={{ref: editingRef}}\n        />\n      <div\n        style={{display: !editing ? 'block' : 'none'}}>\n        {node.label}\n      </div>\n      <div style={{display: 'flex'}}>\n        <div>\n          <ColorPickerView\n            colorDispatchable={{\n              colorable: node,\n              dispatchable: (color: Color) => setNodeColor({node, color}),\n            }}\n            colors={['white', 'red', 'blue', 'yellow']}\n            />\n          <ShapePicker node={node} />\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <div>\n            <Button style={{padding: 22, minWidth: 0, width: 24, height: 24}} onClick={del}>\n              <DeleteIcon />\n            </Button>\n            <Button style={{padding: 22, minWidth: 0, width: 24, height: 24}} onClick={() => setEditing(true)}>\n              <EditIcon />\n            </Button>\n          </div>\n          <div>\n            <Button style={{padding: 22, minWidth: 0, width: 24, height: 24}} onClick={connect}>\n              <ShareIcon />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default React.memo(NodeView)\n","import React, { useState, useRef } from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport NodeView from './NodeView'\nimport { addNode, Node } from './graphSlice'\nimport type { RootState } from './store'\n\nfunction NodesView() {\n  const dispatch = useDispatch()\n  const graph = useSelector((state: RootState) => state.graph)\n  const [searchCriteria, setSearchCriteria] = useState('')\n  const [newNodeLabel, setNewNodeLabel] = useState('')\n  const newNode = (evt: React.FocusEvent<HTMLInputElement>) => {\n    const label = evt.target.value;\n    if (label) {\n      dispatch(addNode({ label, color: 'white' }))\n      setNewNodeLabel('')\n    }\n  }\n  const addRef = useRef<HTMLInputElement>(null)\n  const searchRef = useRef<HTMLInputElement>(null)\n  useHotkeys('esc', () => {\n    const el = (document.activeElement as any)\n    if (!el) return;\n    const v = el.value\n    el.value = ''\n    el.blur()\n    el.value = v\n  }, {enableOnTags: ['INPUT']})\n  useHotkeys('a', () => addRef?.current?.focus(), {keyup: true})\n  useHotkeys('s', (e: KeyboardEvent) => !e.ctrlKey && searchRef?.current?.focus(), {keyup: true})\n  const nodes = graph.nodes\n  return (\n    <div>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n        Nodos\n      </Typography>\n      <TextField\n        fullWidth\n        label=\"Buscar\"\n        value={searchCriteria}\n        onChange={(e) => setSearchCriteria(e.target.value)}\n        inputProps={{ 'aria-label': 'Buscar', 'ref': searchRef }}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n            {searchCriteria &&\n              <IconButton\n                onClick={() => setSearchCriteria('')}\n                >\n                <ClearIcon />\n              </IconButton>\n            }\n            {!searchCriteria &&\n              <IconButton\n                >\n                  <SearchIcon />\n                </IconButton>\n              }\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        fullWidth\n        label=\"Agregar nodo...\"\n        onBlur={newNode}\n        value={newNodeLabel}\n        inputProps={{ 'ref': addRef }}\n        onChange={(evt) => setNewNodeLabel(evt.target.value)}\n        onKeyPress={(evt) => evt.key === 'Enter' && (evt.target as HTMLInputElement).blur()}\n        />\n      <ul style={{padding: 0}}>\n        {nodes.map((node: Node, index: number) => (\n          <NodeView\n            visible={node.label.indexOf(searchCriteria) > -1}\n            key={node.id}\n            index={index}\n            node={node}\n            />\n        ))}\n      </ul>\n    </div>\n  )\n}\nexport default NodesView\n","import React, { useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Node, Edge, Color, setEdgeColor, deleteEdge } from './graphSlice'\nimport ColorPickerView from './ColorPickerView'\n\nfunction EdgeView({edge, from, to, index}: {edge: Edge, from: Node, to: Node, index: number}) {\n  const dispatch = useDispatch()\n  const del = () => dispatch(deleteEdge(edge))\n  const listRef = useRef<HTMLLIElement>(null)\n  useHotkeys((1+index).toString(), () => {\n    listRef?.current?.getElementsByTagName('button')[0].focus()\n  })\n  const isActive = () => {\n    if (document.activeElement && listRef?.current) {\n      return listRef.current.contains(document.activeElement)\n    }\n    return false\n  }\n  useHotkeys('k', () => { isActive() && dispatch(setEdgeColor({edge, color: 'black'}))})\n  useHotkeys('y', () => { isActive() && dispatch(setEdgeColor({edge, color: 'yellow'}))})\n  useHotkeys('b', () => { isActive() && dispatch(setEdgeColor({edge, color: 'blue'}))})\n  useHotkeys('r', () => { isActive() && dispatch(setEdgeColor({edge, color: 'red'}))})\n  return (\n    <li style={{listStyleType: 'none', margin: 0}} ref={listRef}>\n      {from.label} - {to.label}\n      <div style={{display: 'flex'}}>\n        <div>\n          <ColorPickerView\n            colorDispatchable={{\n              colorable: edge,\n              dispatchable: (color: Color) => setEdgeColor({edge, color}),\n            }}\n            colors={['black', 'red', 'blue', 'yellow']}\n            />\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n          <div>\n            <Button style={{padding: 22, minWidth: 0, width: 24, height: 24}} onClick={del}>\n              <DeleteIcon />\n            </Button>\n          </div>\n          <div>\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default EdgeView\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport EdgeView from './EdgeView'\nimport { Node, Edge, addEdge } from './graphSlice'\nimport type { RootState } from './store'\n\nfunction EdgesView() {\n  const dispatch = useDispatch()\n  const graph = useSelector((state: RootState) => state.graph)\n  const nodesById = Object.fromEntries(graph.nodes.map((node: Node) => [node.id, node]))\n  const [searchCriteria, setSearchCriteria] = useState('')\n  const [newEdgeFrom, setNewEdgeFrom] = useState<Node | null>(null)\n  const [newEdgeTo, setNewEdgeTo] = useState<Node | null>(null)\n  useEffect(() => {\n    if (!newEdgeFrom || !newEdgeTo) return\n    dispatch(addEdge({'from': newEdgeFrom, to: newEdgeTo}))\n    setNewEdgeFrom(null)\n    setNewEdgeTo(null)\n  }, [setNewEdgeFrom, setNewEdgeTo, newEdgeFrom, newEdgeTo, dispatch])\n\n  const addRef = useRef<HTMLInputElement>(null)\n  const searchRef = useRef<HTMLInputElement>(null)\n  useHotkeys('esc', () => {\n    const el = (document.activeElement as any)\n    if (!el) return;\n    const v = el.value\n    el.value = ''\n    el.blur()\n    el.value = v\n  }, {enableOnTags: ['INPUT']})\n  useHotkeys('a', () => {\n    (addRef?.current?.getElementsByTagName('INPUT')[0] as HTMLInputElement).focus()\n  }, {keyup: true})\n  useHotkeys('s', (e: KeyboardEvent) => !e.ctrlKey && searchRef?.current?.focus(), {keyup: true})\n  const edges = searchCriteria === '' ? graph.edges : graph.edges.filter((e: Edge) => nodesById[e.from].label.indexOf(searchCriteria) > -1 || nodesById[e.to].label.indexOf(searchCriteria) > -1)\n\n  return (\n    <div>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n        Conectores\n      </Typography>\n      <TextField\n        fullWidth\n        label=\"Buscar\"\n        value={searchCriteria}\n        onChange={(e) => setSearchCriteria(e.target.value)}\n        inputProps={{ 'aria-label': 'Buscar', ref: searchRef }}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n            {searchCriteria &&\n              <IconButton\n                onClick={() => setSearchCriteria('')}\n                >\n                <ClearIcon />\n              </IconButton>\n            }\n            {!searchCriteria &&\n              <IconButton\n                onClick={() => {}}\n                >\n                  <SearchIcon />\n                </IconButton>\n              }\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Autocomplete\n        options={graph.nodes.slice().reverse()}\n        getOptionLabel={(option) => option.label}\n        onChange={(_, value) => setNewEdgeFrom(value)}\n        value={newEdgeFrom}\n        blurOnSelect\n        ref={addRef}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            label=\"Agregar conector desde...\"\n            />\n          )}\n        />\n      <Autocomplete\n        options={graph.nodes.slice().reverse()}\n        getOptionLabel={(option) => option.label}\n        blurOnSelect\n        onChange={(_, value) => setNewEdgeTo(value)}\n        value={newEdgeTo}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            label=\"Agregar conector hacia...\"\n            />\n          )}\n        />\n      <ul style={{padding: 0}}>\n        {edges.map((edge: Edge, index: number) => (\n          <EdgeView\n            key={edge.id}\n            index={index}\n            edge={edge}\n            from={nodesById[edge.from]}\n            to={nodesById[edge.to]}\n            />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default EdgesView\n","import React, { useEffect, useRef } from 'react'\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSelector, useDispatch } from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\n\nimport { updateText } from './graphSlice'\nimport type { RootState } from './store'\n\nfunction NoteTakerView() {\n  const markdown = useSelector((state: RootState) => state.graph.text)\n  const dispatch = useDispatch()\n  const ref = useRef<HTMLTextAreaElement>()\n  useEffect(() => {\n    ref?.current?.focus()\n  })\n  useHotkeys('e', () => ref?.current?.focus(), {keyup: true})\n  useHotkeys('esc', () => {\n    const el = (document.activeElement as any)\n    if (!el) return;\n    el.blur()\n  }, {enableOnTags: ['TEXTAREA']})\n  return (\n    <div>\n      <TextField\n        multiline\n        fullWidth\n        inputProps={{style: {minHeight: 400}}}\n        inputRef={ref}\n        value={markdown}\n        onChange={(e) => dispatch(updateText(e.target.value))}\n        />\n    </div>\n  )\n}\n\nexport default NoteTakerView\n","import React from 'react'\nimport NodesView from './NodesView';\nimport EdgesView from './EdgesView';\nimport NoteTakerView from './NoteTakerView'\n\nfunction Editor({tab}: {tab: number}) {\n  return (\n    <div style={{height: 'calc(-48px + 100vh)', overflow: 'auto'}}>\n      <div style={{padding: 20}}>\n        <div hidden={tab !== 0}>\n          <NodesView />\n        </div>\n        <div hidden={tab !== 1}>\n          <EdgesView />\n        </div>\n        <div hidden={tab !== 2}>\n          <NoteTakerView />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Editor\n","import React, { useState, useEffect, useRef } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { useSelector } from 'react-redux'\nimport { Network } from 'vis-network'\n\nimport { Node, Edge } from './graphSlice'\nimport type { RootState } from './store'\n\nfunction Outline({tab}: {tab: number}) {\n  const graph = useSelector((state: RootState) => state.graph)\n  const [version, setVersion] = useState('0')\n  const [currentGraph, setCurrentGraph] = useState<null | typeof graph>(null)\n  const [previousGraph, setPreviousGraph] = useState('')\n  const [network, setNetwork] = useState<Network | null>(null)\n  const markdown = useSelector((state: RootState) => state.graph.text)\n  useEffect(() => {\n    const j = JSON.stringify(graph)\n    if (j !== previousGraph) {\n      setPreviousGraph(j)\n      setCurrentGraph(JSON.parse(j))\n      setVersion((parseInt(version) + 1).toString())\n    }\n    if (network) {\n      const n = network as any\n      const nodes = graph.nodes\n      const nodeIds = graph.nodes.map((n: Node) => n.id)\n      const removedNodes = JSON.parse(previousGraph).nodes.filter((n: Node) => nodeIds.indexOf(n.id) === -1)\n      n.body.data.nodes.remove(removedNodes)\n      n.body.data.nodes.update(nodes);\n\n      const edgeIds = graph.edges.map((e: Edge) => e.id)\n      const removedEdges = JSON.parse(previousGraph).edges.filter((n: Node) => edgeIds.indexOf(n.id) === -1)\n      n.body.data.edges.remove(removedEdges)\n      n.body.data.edges.update(graph.edges);\n      n.stabilize(1000)\n    }\n  }, [setPreviousGraph, graph, previousGraph, version, network])\n\n  const visJsRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!network) {\n      setNetwork(visJsRef.current && currentGraph &&\n        new Network(visJsRef.current, currentGraph, {\n          physics: {enabled: false},\n          layout: {\n            hierarchical: {\n              nodeSpacing: 200,\n              enabled: true,\n              direction: 'LR',\n              sortMethod: 'hubsize',\n            }\n          },\n          edges: {\n            arrows: {\n              to: {\n                enabled: true,\n              }\n            }\n          },\n        }))\n    }\n  }, [visJsRef, currentGraph, network]);\n\n  return <>\n    <div ref={visJsRef} style={{width: '100%', height: '100vh', display: (tab === 1 || tab === 0) ? 'block' : 'none'}} />\n    <div style={{width: '100%', height: '100vh', display: tab === 2 ? 'block' : 'none'}}>\n      <ReactMarkdown children={markdown} />\n    </div>\n  </>\n}\n\nexport default Outline\n","import { createSlice } from '@reduxjs/toolkit'\nimport { nanoid } from 'nanoid'\nimport { setName, setDriveId } from './graphSlice'\n\ninterface DriveState {\n  isSignedIn: boolean\n  recentlySaved: boolean\n}\n\nconst initialState: DriveState = {\n  isSignedIn: false,\n  recentlySaved: false,\n}\n\nconst driveSlice = createSlice({\n  name: 'drive',\n  initialState,\n  reducers: {\n    setSignedIn: {\n      reducer(state, action) {\n        state.isSignedIn = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n    setSaved: {\n      reducer(state, action) {\n        state.recentlySaved = action.payload\n      },\n      prepare(data: any) { return { id: nanoid(), payload: data } as any },\n    },\n  },\n})\n\nexport const {\n  setSignedIn,\n  setSaved,\n} = driveSlice.actions\nexport const login = () => async (dispatch: any) => {\n  return new Promise((resolve, reject) => {\n    gapi.load('client:auth2', async () => {\n      try {\n        await gapi.client.init({\n          // this should not be hardcoded!\n          'apiKey': 'AIzaSyCLb1u522GN_FZMEyVtWWyeAcAnrCBZOek',\n          'clientId': '1005163744705-p4784hs6t18al7seej1e1oh4bsfqscej.apps.googleusercontent.com',\n          'scope': 'https://www.googleapis.com/auth/drive.appdata',\n          'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n        })\n\n        const status = gapi.auth2.getAuthInstance().isSignedIn.get()\n        if (!status) {\n          gapi.auth2.getAuthInstance().isSignedIn.listen((status: boolean) => {\n            resolve(dispatch(setSignedIn(status)))\n          })\n          await gapi.auth2.getAuthInstance().signIn()\n        } else {\n          resolve(dispatch(setSignedIn(status)))\n        }\n      } catch (e) {\n        console.error(e)\n        reject(e)\n      }\n    })\n  })\n}\n\nexport const saveToDrive = () => async (dispatch: any, getState: any) => {\n  return new Promise((resolve, reject) => {\n    (async () => {\n      const graph = getState().graph\n      let name;\n      if (graph.name) {\n        name = graph.name\n      } else {\n        name = prompt('name?')\n        await dispatch(setName(name))\n      }\n      try {\n        await dispatch(login());\n      } catch (e) {\n        // FIXME: setError...\n        alert(e.details || e.error)\n        return\n      }\n\n      let driveId = graph.driveId\n      if (!driveId) {\n        const response = await (gapi.client.drive as any).files.create({\n          parents: ['appDataFolder'],\n          'content-type': 'application/json',\n          uploadType: 'multipart',\n          name: name,\n          mimeType: 'application/json',\n          fields: 'id, name, kind, size'\n        })\n        await dispatch(setDriveId(response.result.id))\n        driveId = response.result.id\n      }\n\n      const g = {\n        name: name || '',\n        edges: graph.edges,\n        nodes: graph.nodes,\n        driveId: driveId,\n        text: graph.text,\n      }\n      const body = JSON.stringify({graph: g});\n      await fetch(`https://www.googleapis.com/upload/drive/v3/files/${driveId}`, {\n       method: 'PATCH',\n       headers: new Headers({\n         'Authorization': `Bearer ${gapi.client.getToken().access_token}`,\n         'Content-Type': 'application/json'\n       }),\n       body,\n      })\n      dispatch(setSaved(true))\n    })()\n  })\n}\n\nexport default driveSlice.reducer\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { setGraph, setName, setDriveId } from './graphSlice'\nimport { setDrawerIsOpen } from './navigationSlice'\nimport { login } from './driveSlice'\n\nexport default function LoadFromDrive({close}: {close: () => void}) {\n  const [loading, setLoading] = useState(true)\n  const [files, setFiles] = useState<{id: string, name: string}[]>([])\n  const dispatch = useDispatch()\n  const handleListItemClick = async ({id, name}: {id: string, name: string}) => {\n    const f = await (gapi.client.drive as any).files.get({\n      fileId: id,\n      alt: 'media',\n    });\n    await dispatch(setDriveId(id))\n    await dispatch(setName(name))\n    await dispatch(setGraph(JSON.parse(f.body).graph))\n    await dispatch(setDrawerIsOpen(false))\n    close()\n  };\n\n  useState(() => {\n    (async () => {\n      try {\n        await dispatch(login());\n      } catch (e) {\n        // FIXME: setError...\n        alert(e.details || e.error)\n        return\n      }\n      const response = await (gapi.client as any).drive.files.list({\n        spaces: 'appDataFolder',\n        pageSize: 50,\n        fields: \"nextPageToken, files(id, name)\",\n        orderBy: 'modifiedTime desc',\n      })\n      setLoading(false)\n      const f = JSON.parse(response.body).files\n      setFiles(f)\n    })()\n  })\n\n  return (\n    <Dialog onClose={close} aria-labelledby=\"simple-dialog-title\" open={true}>\n      <DialogTitle id=\"simple-dialog-title\" style={{minWidth: 400}}>\n        Cargar desde Drive\n        <IconButton><CloseIcon onClick={close} /></IconButton>\n      </DialogTitle>\n      <div style={{minHeight: 100}}>\n        {loading && <div style={{textAlign: 'center'}}><CircularProgress /></div>}\n        {!loading && <List>\n          {files.map((file) => (\n            <ListItem button onClick={() => handleListItemClick(file)} key={file.id}>\n              <ListItemText primary={file.name} />\n            </ListItem>\n          ))}\n        </List>}\n      </div>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport ShareIcon from '@material-ui/icons/Share';\n// import ImageIcon from '@material-ui/icons/Image';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport dotparse, { NodeStatement, EdgeStatement } from 'dotparser'\n\nimport LoadFromDrive from './LoadFromDrive'\nimport { Node, Edge, setGraph } from './graphSlice'\nimport { saveToDrive } from './driveSlice'\nimport { setDrawerIsOpen } from './navigationSlice'\nimport type { RootState } from './store'\n\nfunction AppDrawer() {\n  const dispatch = useDispatch()\n  const graph = useSelector((state: RootState) => state.graph)\n  const drawerIsOpen = useSelector((state: RootState) => state.navigation.drawerIsOpen)\n  const [loadFromDriveOpen, setLoadFromDriveOpen] = useState(false)\n\n  const uploadDOT = () => {\n    const element = document.createElement('input');\n    element.setAttribute('type', 'file');\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n\n    element.onchange = () => {\n      const fileToLoad = element.files![0];\n\n      const getAttribute = (name: string, attrs: {id: string, eq: string}[]) => {\n        return attrs.find((a) => a.id === name)?.eq\n      }\n      const fileReader = new FileReader();\n      fileReader.onload = function(fileLoadedEvent){\n        const textFromFileLoaded = fileLoadedEvent.target!.result;\n        const st = dotparse(textFromFileLoaded as string)\n        const nodes = st[0].children\n            .filter((s) => s.type === 'node_stmt')\n            .map((n: NodeStatement | EdgeStatement, i) => n as NodeStatement)\n            .map((n: NodeStatement, i) => ({\n          id: i + 1,\n          label: n.node_id.id,\n          color: getAttribute('color', n.attr_list),\n          shape: getAttribute('shape', n.attr_list),\n        }))\n        const nodesByLabel = Object.fromEntries(nodes.map((n) => [n.label, n]))\n        const edges = st[0].children\n            .filter((s) => s.type === 'edge_stmt')\n            .map((n: NodeStatement | EdgeStatement, i) => n as EdgeStatement)\n            .map((n: EdgeStatement, i) => ({\n          id: i + 1,\n          from: nodesByLabel[n.edge_list[0].id].id,\n          to: nodesByLabel[n.edge_list[1].id].id,\n          color: getAttribute('color', n.attr_list),\n        }))\n        const graph = {\n          nodes,\n          edges,\n        }\n        dispatch(setGraph(graph))\n      };\n\n      fileReader.readAsText(fileToLoad, \"UTF-8\");\n    }\n  }\n\n  const downloadAsDOT = () => {\n    const nodes = Object.fromEntries(graph.nodes.map((node: Node) => [node.id, node]))\n    let text = 'digraph {\\n  rankdir=LR;\\n'\n    text += graph.nodes.map((n: Node) => `  \"${n.label}\"[shape=${n.shape}][color=${n.color}]`).join('\\n') + '\\n'\n    text += graph.edges.map((e: Edge) => `  \"${nodes[e.from].label}\"->\"${nodes[e.to].label}\"[color=${e.color}]`).join('\\n') + '\\n'\n    text += '}'\n    const filename = (graph.name || 'graph') + '.dot'\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  /* TODO\n  const downloadAsPNG = () => {\n    const dt = visJsRef?.current?.getElementsByTagName('canvas')[0]\n    if (!dt) return\n    const href = dt.toDataURL().replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n    const filename = 'graph.png'\n    const element = document.createElement('a');\n    element.setAttribute('href', href)\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n  */\n\n  return (\n    <Drawer\n      open={drawerIsOpen}\n      >\n      <div>\n        <IconButton onClick={() => dispatch(setDrawerIsOpen(false))}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button style={{paddingRight: 100}} onClick={() => dispatch(saveToDrive())}>\n          <ListItemIcon><CloudUploadIcon /></ListItemIcon>\n          <ListItemText primary=\"Save to Drive\" />\n        </ListItem>\n        <ListItem button style={{paddingRight: 100}} onClick={() => setLoadFromDriveOpen(true)}>\n          <ListItemIcon><CloudDownloadIcon /></ListItemIcon>\n          <ListItemText primary=\"Load from Drive\" />\n        </ListItem>\n        <ListItem button style={{paddingRight: 100}} onClick={uploadDOT}>\n          <ListItemIcon><PublishIcon /></ListItemIcon>\n          <ListItemText primary=\"Upload DOT\" />\n        </ListItem>\n        <ListItem button style={{paddingRight: 100}} onClick={downloadAsDOT}>\n          <ListItemIcon><ShareIcon /></ListItemIcon>\n          <ListItemText primary=\"Download as DOT\" />\n        </ListItem>\n        {/*\n        <ListItem button style={{paddingRight: 100}}>\n          <ListItemIcon><ImageIcon /></ListItemIcon>\n          <ListItemText primary=\"Download as PNG\" />\n        </ListItem>\n        */}\n      </List>\n      {loadFromDriveOpen && <LoadFromDrive\n        close={() => setLoadFromDriveOpen(false)}\n        />}\n    </Drawer>\n  )\n}\n\nexport default AppDrawer\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Editor from './Editor'\nimport Outline from './Outline'\nimport AppDrawer from './AppDrawer'\n\nimport { setDrawerIsOpen, Tab as TabType, setTab } from './navigationSlice'\nimport { saveToDrive, setSaved } from './driveSlice'\nimport type { RootState } from './store'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const tab = useSelector((state: RootState) => state.navigation.tab)\n  const saved = useSelector((state: RootState) => state.drive.recentlySaved)\n  const drawerIsOpen = useSelector((state: RootState) => state.navigation.drawerIsOpen)\n  useHotkeys('alt+0', () => { dispatch(setDrawerIsOpen(!drawerIsOpen)) }, [drawerIsOpen])\n  useHotkeys('ctrl+1', () => { dispatch(setTab(0)) })\n  useHotkeys('ctrl+2', () => { dispatch(setTab(1)) })\n  useHotkeys('ctrl+3', () => { dispatch(setTab(2)) })\n  useHotkeys('ctrl+s', (event: any) => { dispatch(saveToDrive()); event.preventDefault() })\n\n  return (\n    <div>\n      <AppDrawer />\n      <AppBar position=\"static\" style={{display: 'flex', flexDirection: 'row'}}>\n        <Toolbar style={{minHeight: 0, padding: '0 10px'}}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            style={{margin: 0, padding: 0}}\n            onClick={() => dispatch(setDrawerIsOpen(true))}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n        <Tabs value={tab} onChange={(e: any, newTab: TabType) => dispatch(setTab(newTab))}>\n          <Tab label=\"Nodos\" />\n          <Tab label=\"Conectores\" />\n          <Tab label=\"Texto libre\" />\n        </Tabs>\n      </AppBar>\n      <div className=\"App\" style={{\n        display: 'flex',\n        overflow: 'hidden',\n        height: 'calc(100vh - 48px)',\n      }}>\n        <div style={{flex: 1}}>\n          <Editor tab={tab} />\n        </div>\n        <div style={{flex: 1}}>\n          <Outline tab={tab} />\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={saved}\n        autoHideDuration={6000}\n        onClose={() => dispatch(setSaved(false))}\n        message=\"Proyecto guardado\"\n        action={\n          <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => dispatch(setSaved(false))}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\nimport { combineReducers } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport graph from './graphSlice'\nimport navigation from './navigationSlice'\nimport drive from './driveSlice'\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\n\nexport const store = createStore(\n  combineReducers({\n    graph,\n    navigation,\n    drive,\n  }),\n  composedEnhancer,\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport { store } from './store'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}